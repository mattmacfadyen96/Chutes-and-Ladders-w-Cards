#BlueJ class context
comment0.params=filename_board\ filename_cards
comment0.target=NewChutesAndLadders(java.lang.String,\ java.lang.String)
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ NewChutesAndLadders.\ The\ constructor\ of\ this\ class\ will\ take\ \r\n\ two\ Strings\ that\ are\ the\ text\ files\ that\ will\ be\ read\ in.\ These\ text\ tiles\ hold\ the\ information\ \r\n\ for\ the\ board\ and\ the\ information\ for\ the\ deck\ of\ cards.\ The\ board\ can\ be\ of\ any\ length\ \r\n\ and\ can\ have\ any\ number\ of\ chutes\ and\ ladders.\ The\ deck\ of\ cards\ will\ be\ used\ to\ move\ spaces\ on\ the\r\n\ board,\ this\ will\ be\ used\ for\ the\ spins\ in\ the\ game.\ The\ constructor\ will\ also\ construct\ things\ such\ as\ two\ array\ lists\ of\ the\ \r\n\ same\ size\ with\ the\ starting\ and\ ending\ points\ of\ a\ chute\ and\ ladder.\ The\ deck\ of\ cards\ will\ be\ simulated\ by\ an\ array\ list.\ \r\n\ \r\n\ @param\ the\ first\ param\ will\ be\ a\ string\ of\ the\ file\ name\ for\ the\ board\ info,\ the\ second\ param\ \r\n\ will\ be\ the\ string\ of\ the\ filename\ for\ the\ card\ info\r\n
comment1.params=simulationCount
comment1.target=void\ runSimulation(int)
comment1.text=\ \r\n\ This\ method\ will\ be\ used\ to\ run\ the\ Chutes\ and\ Ladders\ Simulation.\ It\ will\ use\ the\ array\ list\ of\ cards\ and\ randomly\ draw\ \r\n\ indicies\ in\ the\ deck\ to\ draw\ random\ card\ values.\ These\ cards\ will\ tell\ it\ how\ many\ spaces\ the\ player\ needs\ to\ move.\ A\ negative\ \r\n\ space\ can\ also\ occur\ so\ that\ is\ handled\ as\ well.\ It\ checks\ to\ see\ if\ you\ have\ landed\ on\ a\ special\ space,\ a\ chute\ or\ a\ ladder.\ It\ \r\n\ differenties\ between\ a\ chute\ and\ a\ ladder\ by\ checking\ if\ the\ start\ is\ greater\ than\ the\ end\ of\ vice\ versa.\ The\ deck\ of\ cards\ will\ \r\n\ be\ put\ in\ the\ discard\ pile\ array\ list.\ If\ the\ deck\ is\ empty\ then\ the\ discard\ pile\ will\ put\ all\ of\ the\ cards\ back\ into\ the\ deck\r\n\ then\ it\ will\ continue\ drawing\ random\ indicies\ of\ the\ deck\ array\ list.\ It\ will\ continue\ to\ run\ through\ the\ simulaiton\ the\ given\ \r\n\ number\ of\ times\ in\ the\ paramter\r\n\ \r\n\ @param\ simulation\ count,\ the\ number\ of\ simulations\ of\ chutes\ and\ ladders\ to\ be\ played\ \r\n
comment10.params=
comment10.target=int\ getMaxLadders()
comment10.text=\r\n\ This\ method\ will\ calculcate\ the\ max\ number\ of\ ladders\ by\ looping\ through\ the\ ladders\ per\ game\ and\ seeing\ which\ one\ game\ has\ the\ most\ amount\ of\ ladders\ \r\n\ @return\ the\ maxladders\ \r\n
comment11.params=
comment11.target=int\ getMinLadders()
comment11.text=\r\n\ This\ method\ will\ calculcate\ the\ min\ number\ of\ ladders\ by\ looping\ through\ the\ ladders\ per\ game\ and\ seeing\ which\ one\ game\ has\ the\ least\ amount\ of\ ladders\ \r\n\ @return\ the\ minLadders\ \r\n
comment2.params=
comment2.target=double\ getAverageSpins()
comment2.text=\r\n\ This\ method\ will\ be\ used\ to\ calculate\ the\ average\ number\ of\ spins\ it\ takes\ for\ a\ player\ to\ in\ a\ game\ of\ chutes\ and\ ladders\r\n\ \ \ \ It\ will\ do\ this\ by\ looping\ through\ the\ array\ list\ of\ spins\ for\ each\ game\ and\ add\ them\ all\ together\ to\ a\ variable\ called\ sum.\ \r\n\ \ \ \ It\ will\ then\ divide\ the\ sum\ by\ the\ nubmer\ of\ simulations\ that\ were\ run\r\n\ @return\ a\ double\ of\ the\ average\ number\ of\ spins\ per\ game\ \r\n
comment3.params=
comment3.target=double\ getAverageChutes()
comment3.text=\r\n\ This\ method\ will\ be\ used\ to\ calculate\ the\ average\ number\ of\ chutes\ that\ are\ landed\ on\ in\ a\ game\ of\ chutes\ and\ ladders.\ It\ will\ \r\n\ add\ up\ all\ of\ the\ chutes\ that\ were\ landed\ on\ in\ the\ simulation\ to\ a\ variable\ called\ sum.\ It\ will\ then\ divide\ the\ sum\ by\ the\ \r\n\ number\ of\ simulations\ that\ were\ run.\r\n\ @return\ \r\n
comment4.params=
comment4.target=double\ getAverageLadders()
comment4.text=\r\n\ This\ method\ will\ get\ the\ average\ number\ of\ ladders\ that\ are\ stepped\ on\ in\ a\ game\ of\ chutes\ and\ ladders.\ It\ will\ loop\ through\ the\ \r\n\ array\ list\ of\ ladders\ landed\ upon\ per\ game.\ It\ will\ add\ up\ all\ of\ these\ ladder\ counts\ to\ a\ seperate\ sum\ variable\ and\ then\ divide\ \r\n\ the\ sum\ by\ the\ number\ of\ simulation\ numbers\ to\ get\ the\ average\ number\ of\ ladders\ landed\ upon\ in\ the\ given\ number\ of\ simulations\ \r\n
comment5.params=
comment5.target=int[]\ getMostCommonSpaces()
comment5.text=\r\n\ This\ method\ will\ get\ the\ three\ most\ landed\ upon\ spaces\ in\ the\ simulation.\ This\ will\ be\ done\ by\ creating\ three\ index's\ that\ are\ set\ to\ zero\ at\ the\ \r\n\ beginning.\ Check\ the\ first\ index\ and\ the\ second\ index\ and\ update\ the\ max\ and\ min\ in\ each\ instance.\ After\ an\ update\ has\ been\ done\ the\ max\ and\ mins\ \r\n\ are\ shifed\ down\ one.\ So\ if\ it\ is\ the\ 2nd\ max\ then\ the\ 2nd\ original\ is\ shifted\ down\ and\ made\ the\ 3rd\ index/\ \r\n\ @return\ an\ array\ of\ the\ three\ most\ common\ landed\ spaces\ \r\n
comment6.params=
comment6.target=int\ getMaxSpins()
comment6.text=\r\n\ This\ method\ will\ calculcate\ the\ max\ number\ of\ spins\ by\ looping\ through\ the\ spins\ per\ game\ and\ seeing\ which\ one\ game\ has\ the\ most\ amount\ of\ spins\ \r\n\ @return\ the\ maxspins\ \r\n
comment7.params=
comment7.target=int\ getMinSpins()
comment7.text=\r\n\ This\ method\ will\ calcualte\ the\ min\ number\ of\ spins\ by\ looping\ through\ the\ spins\ per\ game\ and\ seeing\ which\ one\ is\ the\ smallest\ \r\n\ @return\ the\ minspins\ \r\n
comment8.params=
comment8.target=int\ getMaxChutes()
comment8.text=\r\n\ This\ method\ will\ calculcate\ the\ max\ number\ of\ chutes\ by\ looping\ through\ the\ chutes\ per\ game\ and\ seeing\ which\ one\ game\ has\ the\ most\ amount\ of\ chutes\ \r\n\ @return\ the\ maxchutes\ \r\n
comment9.params=
comment9.target=int\ getMinChutes()
comment9.text=\r\n\ This\ method\ will\ calculcate\ the\ min\ number\ of\ chutes\ by\ looping\ through\ the\ chutes\ per\ game\ and\ seeing\ which\ one\ game\ has\ the\ least\ amount\ of\ chutes\ \r\n\ @return\ the\ minChutes\r\n
numComments=12
